
@book{cox_business_2021,
	title = {Business {Analysis}, {Requirements}, and {Project} {Management}: {A} {Guide} for {Computing} {Students}},
	isbn = {978-1-00-047049-9},
	shorttitle = {Business {Analysis}, {Requirements}, and {Project} {Management}},
	abstract = {IT projects emerge from a business need. In practice, software developers must accomplish two big things before an IT project can begin: find out what you need to do (i.e., analyse business requirements) and plan out how to do it (i.e., project management). The biggest problem in IT projects is delivering the wrong product because IT people do not understand what business people require. This practical textbook teaches computer science students how to manage and deliver IT projects by linking business and IT requirements with project management in an incremental and straightforward approach. Business Analysis, Requirements, and Project Management: A Guide for Computing Students presents an approach to analysis management that scales the business perspective. It takes a business process view of a business proposal as a model and explains how to structure a technical problem into a recognisable pattern with problem frames. It shows how to identify core transactions and model them as use cases to create a requirements table useful to designers and coders. Linked to the analysis are three management tools: the product breakdown structure (PBS), the Gantt chart, and the Kanban board. The PBS is derived in part from the problem frame. The Gantt chart emerges from the PBS and ensures the key requirements are addressed by reference to use cases. The Kanban board is especially useful in Task Driven Development, which the text covers.  This textbook consists of two interleaving parts and features a single case study. Part one addresses the business and requirements perspective. The second integrates core project management approaches and explains how both requirements and management are connected. The remainder of the book is appendices, the first of which provides solutions to the exercises presented in each chapter. The second appendix puts together much of the documentation for the case study into one place. The case study presents a real-word business scenario to expose students to professional practice.},
	language = {en},
	publisher = {CRC Press},
	author = {Cox, Karl},
	month = oct,
	year = {2021},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Project Management, Computers / Software Development \& Engineering / Systems Analysis \& Design},
}

@misc{arts_martial_nodate,
	title = {Martial {Arts} {Gym} {In} {Bexhill} {\textbar} {Up}-{Grade} {Martial} {Arts}},
	url = {https://www.upgrademartialarts.co.uk},
	abstract = {We offer boxing, kickboxing, BJJ and MMA classes for all ages \& abilities. Build your self-esteem and master the art of self-defence - visit us today!},
	language = {en},
	urldate = {2023-04-27},
	author = {Arts, Up-grade Martial},
	file = {Snapshot:/Users/jazer/Zotero/storage/KHWQK6T3/www.upgrademartialarts.co.uk.html:text/html},
}

@misc{arctype_performance_2021,
	title = {Performance differences between {Postgres} and {MySQL}},
	url = {https://arctype.com/blog/performance-difference-between-postgresql-and-mysql/},
	abstract = {What workload analysis and running queries can teach us about the performance differences in JSON, indexing, and concurrency.},
	language = {en},
	urldate = {2022-10-27},
	journal = {Arctype Blog},
	author = {Arctype},
	month = mar,
	year = {2021},
	file = {Snapshot:/Users/jazer/Zotero/storage/QDPKI8QK/performance-difference-between-postgresql-and-mysql.html:text/html},
}

@misc{noauthor_certbot_nodate,
	title = {Certbot},
	url = {https://certbot.eff.org/},
	abstract = {Tagline},
	urldate = {2023-04-28},
	file = {Snapshot:/Users/jazer/Zotero/storage/U43RUV43/certbot.eff.org.html:text/html},
}

@misc{noauthor_jazerbarclayubuntu-1804-server-setup_nodate,
	title = {{JazerBarclay}/{Ubuntu}-18.04-{Server}-{Setup}: {A} basic setup and installation guide for ubuntu server 18.04 on linode},
	shorttitle = {{JazerBarclay}/{Ubuntu}-18.04-{Server}-{Setup}},
	url = {https://github.com/JazerBarclay/Ubuntu-18.04-Server-Setup},
	abstract = {A basic setup and installation guide for ubuntu server 18.04 on linode - JazerBarclay/Ubuntu-18.04-Server-Setup: A basic setup and installation guide for ubuntu server 18.04 on linode},
	language = {en},
	urldate = {2023-04-28},
	journal = {GitHub},
	file = {Snapshot:/Users/jazer/Zotero/storage/GVGZNLL7/Ubuntu-18.html:text/html},
}

@misc{noauthor_digitalocean_nodate,
	title = {{DigitalOcean} {\textbar} {The} {Cloud} for {Builders}},
	url = {https://www.digitalocean.com},
	abstract = {Simple, scalable cloud computing solutions built for startups and small-to-midsize businesses.},
	language = {en},
	urldate = {2023-04-28},
	file = {Snapshot:/Users/jazer/Zotero/storage/WK66XHD8/www.digitalocean.com.html:text/html},
}

@misc{noauthor_cloud_nodate,
	title = {Cloud {Computing} \& {Linux} {Servers} {\textbar} {Alternative} to {AWS} {\textbar} {Linode}},
	url = {https://www.linode.com},
	abstract = {Simplify your infrastructure with Linode's cloud computing and hosting solutions and develop, deploy, and scale faster and easier.},
	language = {en},
	urldate = {2023-04-28},
	journal = {Linode (Akamai)},
	file = {Snapshot:/Users/jazer/Zotero/storage/D86LBCXA/www.linode.com.html:text/html},
}

@misc{yablonski_home_nodate,
	title = {Home},
	url = {https://lawsofux.com/},
	abstract = {Laws of UX is a collection of best practices that designers can consider when building user interfaces.},
	language = {en},
	urldate = {2023-04-28},
	journal = {Laws of UX},
	author = {Yablonski, Jon},
	file = {Snapshot:/Users/jazer/Zotero/storage/8RYCLKU9/lawsofux.com.html:text/html},
}

@misc{noauthor_ci601_nodate,
	title = {{CI601} {Final} {Year} {Project} {\textbar} {Trello}},
	url = {https://trello.com/b/xphHSfcJ/ci601-final-year-project},
	urldate = {2023-04-28},
}

@misc{noauthor_ten_nodate,
	title = {Ten modern layouts in one line of {CSS}},
	url = {https://web.dev/one-line-layouts/},
	abstract = {This post highlights a few powerful lines of CSS that do some serious heavy lifting and help you build robust modern layouts.},
	language = {en},
	urldate = {2023-04-28},
	journal = {web.dev},
}

@misc{namecom_namecom_nodate,
	title = {Name.com {\textbar} {Domain} {Names}, {Registration}, {Websites} \& {Hosting}},
	url = {https://www.name.com/},
	abstract = {Name.com is your complete source for domain names, hosting and other online presence solutions.},
	language = {en},
	urldate = {2023-04-28},
	author = {Name.com},
}

@misc{noauthor_nodejs_nodate,
	title = {Node.js},
	url = {https://nodejs.org/en},
	abstract = {Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine.},
	urldate = {2023-04-28},
	journal = {Node.js},
}

@misc{noauthor_react_nodate,
	title = {React},
	url = {https://react.dev/},
	abstract = {The library for web and native user interfaces},
	language = {en},
	urldate = {2023-04-28},
	file = {Snapshot:/Users/jazer/Zotero/storage/AUNNIHUU/react.dev.html:text/html},
}

@misc{noauthor_built-react_nodate,
	title = {Built-in {React} {Hooks} – {React}},
	url = {https://react.dev/reference/react},
	abstract = {The library for web and native user interfaces},
	language = {en},
	urldate = {2023-04-28},
	file = {Snapshot:/Users/jazer/Zotero/storage/3NQ25Q8V/react.html:text/html},
}

@misc{lucid_why_2019,
	title = {Why (and {How}) {You} {Should} {Use} {Feature}-{Driven} {Development}},
	url = {https://www.lucidchart.com/blog/why-use-feature-driven-development},
	abstract = {While scrum may be the most popular scrum methodology, it's worth considering feature-driven development, especially for long-term projects with large teams. Read about the steps of the FDD project life cycle, plus advantages and disadvantages of this met},
	language = {en},
	urldate = {2023-04-28},
	author = {Lucid, Content Team},
	month = dec,
	year = {2019},
	file = {Snapshot:/Users/jazer/Zotero/storage/RKDQH2JZ/why-use-feature-driven-development.html:text/html},
}

@misc{noauthor_recharts_nodate,
	title = {Recharts},
	url = {https://recharts.org/en-US/},
	urldate = {2023-04-28},
	file = {Recharts:/Users/jazer/Zotero/storage/VUGUGJLC/en-US.html:text/html},
}

@book{martin_clean_2008,
	address = {Philadelphia, PA},
	title = {Clean code: {A} handbook of agile software craftsmanship},
	language = {en},
	publisher = {Prentice Hall},
	author = {Martin, Robert C},
	year = {2008},
}

@misc{noauthor_swagger_nodate,
	title = {Swagger {Editor}},
	url = {https://editor.swagger.io/},
	urldate = {2023-04-29},
	file = {Swagger Editor:/Users/jazer/Zotero/storage/LZC7836V/editor.swagger.io.html:text/html},
}

@misc{noauthor_invoice_nodate,
	title = {Invoice {Ninja}},
	url = {https://app.invoiceninja.com},
	abstract = {Simple, Intuitive Invoicing.},
	language = {en},
	urldate = {2023-04-30},
	journal = {Invoice Ninja},
	file = {Snapshot:/Users/jazer/Zotero/storage/9MMYDGQB/dashboard.html:text/html},
}

@misc{noauthor_hubspot_2022,
	title = {{HubSpot}},
	url = {https://www.hubspot.com},
	abstract = {HubSpot's CRM platform contains the marketing, sales, service, operations, and website-building software you need to grow your business.},
	language = {en-US, en},
	urldate = {2022-11-30},
	journal = {HubSpot},
	month = nov,
	year = {2022},
	file = {Snapshot:/Users/jazer/Zotero/storage/27PTC5V6/www.hubspot.com.html:text/html},
}

@misc{noauthor_free_2022,
	title = {Free {Invoicing} {Software} for {Small} {Businesses} {\textbar} {Invoice} {Ninja}},
	url = {https://invoiceninja.com/},
	abstract = {Leading free invoice generator for freelancers and small businesses. Invoice online, accept payments, track expenses \& time billable-tasks.},
	language = {en-US},
	urldate = {2022-11-10},
	month = nov,
	year = {2022},
}

@misc{adams_basic_2018,
	title = {Basic {Login} {System} with {Node}.js, {Express}, and {MySQL}},
	url = {https://codeshack.io/basic-login-system-nodejs-express-mysql/},
	abstract = {Learn how to create a basic login system with Node.js, Express, and MySQL. Authenticate users on your website to access restricted pages.},
	language = {en},
	urldate = {2023-04-30},
	journal = {CodeShack},
	author = {Adams, David},
	month = sep,
	year = {2018},
}

@misc{macharia_session_2021,
	title = {Session {Management} in {Node}.js using {ExpressJS} and {Express} {Session}},
	url = {https://www.section.io/engineering-education/session-management-in-nodejs-using-expressjs-and-express-session/},
	abstract = {This tutorial will help the reader develop a session based authentication system and go over how to manage sessions using Express.js and Express Session in Node.js.},
	language = {en-us},
	urldate = {2023-04-30},
	journal = {Engineering Education (EngEd) Program {\textbar} Section},
	author = {Macharia, Catherine},
	month = jun,
	year = {2021},
}

@misc{participation_companies_nodate,
	type = {Text},
	title = {Companies {Act} 2006},
	url = {https://www.legislation.gov.uk/ukpga/2006/46/part/15/chapter/2},
	abstract = {An Act to reform company law and restate the greater part of the enactments relating to companies; to make other provision relating to companies and other forms of business organisation; to make provision about directors' disqualification, business names, auditors and actuaries; to amend Part 9 of the Enterprise Act 2002; and for connected purposes.},
	language = {eng},
	urldate = {2023-04-30},
	author = {Participation, Expert},
	note = {Publisher: Statute Law Database},
	file = {Snapshot:/Users/jazer/Zotero/storage/XXZD23ZZ/2.html:text/html},
}

@inproceedings{ionescu_alternatives_2019,
	title = {Alternatives for {Running} {Linux} {Applications} in {Windows}},
	doi = {10.1109/ECAI46879.2019.9042127},
	abstract = {The Linux operating system is often used alongside Windows in computer labs in universities for research, laboratories and general purpose use. It is therefore important to investigate the characteristics of some of the possibilities available for students to run Windows and Linux applications, if possible at the same time, on the same computer. This paper compares the use of Windows Subsystem Linux, Docker, Cygwin and Oracle VM VirtualBox as solutions for running Linux guest applications in a Windows 10 host environment. The tests use simple C code that targets process creation, application performance and inter-process communication performance. The conclusions show the advantages and disadvantages of using each solution for running Linux applications in a Windows host.},
	booktitle = {2019 11th {International} {Conference} on {Electronics}, {Computers} and {Artificial} {Intelligence} ({ECAI})},
	author = {Ionescu, Valeriu Manuel and Patel, Manan and Hindocha, Drashti},
	month = jun,
	year = {2019},
	keywords = {Cygwin, Docker, performance, VirtualBox, Windows Linux Subsystem},
	pages = {1--4},
	file = {IEEE Xplore Full Text PDF:/Users/jazer/Zotero/storage/Y6X6SHLT/Ionescu et al. - 2019 - Alternatives for Running Linux Applications in Win.pdf:application/pdf},
}

@book{robbins_unix_2006,
	address = {Beijing ; Cambrige, Mass},
	edition = {4th ed},
	title = {{UNIX} in a nutshell},
	isbn = {978-0-596-10029-2},
	publisher = {O'Reilly},
	author = {Robbins, Arnold},
	year = {2006},
	note = {OCLC: ocm62876146},
	keywords = {Operating systems (Computers), UNIX (Computer file)},
	annote = {Introduction -- Unix commands -- The Unix shell: an overview -- The Bash and Korn shells -- tcsh: an extended C shell -- Package management -- Pattern matching -- The Emacs editor -- The vi, ex, and vim editors -- The sed editor -- The awk programming language -- Source code management: an overview -- The revision control system -- The concurrent versions system -- The subversion version control system -- The GNU make utility -- The GDB debugger -- Writing manual pages},
	annote = {Previous ed.: 1999 "A desktop quick reference covers GNU/Linux, Mac OS X, and Solaris"--Cover},
}

@book{chacon_pro_2014,
	address = {New York, NY},
	edition = {Second edition},
	series = {The expert's voice in software development},
	title = {Pro {Git}},
	isbn = {978-1-4842-0077-3},
	publisher = {Apress},
	author = {Chacon, Scott},
	year = {2014},
	keywords = {Distributed processing, Electronic data processing, Git (Computer file)},
	annote = {"Everything you need to know about the Git distibuted source control tool"--Cover},
}

@techreport{tandel_impact_2018,
	title = {Impact of {Progressive} {Web} {Apps} on {Web} {App} {Development}},
	abstract = {Innovation in technology always makes an impact on how products and services are designed. The invention of Smartphone especially and after the launch of Android OS which is free there is a huge increase in the use of smartphones. Most of the users use native mobile applications for browsing the contents of the particular industry. The other way is to browse the contents is through a web browser. But both the ways have limitations. The first way which is the native app, user is required to download the app firstly and then they must use it as per their requirements. This has two major disadvantages, one is it takes space on local storage of smartphone device and the network connection must be strong enough to operate it smoothly. The areas where 2G or lesser bandwidth or 3G network is available, it becomes a slow process to access this native app. The second way which is through the web browser has disadvantages since the user experience is not as great as native app. In order to overcome the above limitations, Google has provided a solution of Progressive Web App (PWA) which combines the best of web and mobile apps giving us a rich experience just like the native apps. It is a website built using web technologies that acts like an app. PWA is a website built using web technologies that acts like an app and is not required to be installed like a native app.},
	author = {Tandel, Sayali and Jamadar, Abhishek},
	month = sep,
	year = {2018},
	doi = {10.15680/IJIRSET.2018.0709021},
	file = {Full Text PDF:/Users/jazer/Zotero/storage/TEUC45ZZ/Tandel and Jamadar - 2018 - Impact of Progressive Web Apps on Web App Developm.pdf:application/pdf},
}

@article{koopman_exception_2000,
	title = {The exception handling effectiveness of {POSIX} operating systems},
	volume = {26},
	issn = {1939-3520},
	doi = {10.1109/32.877845},
	abstract = {Operating systems form a foundation for robust application software, making it important to understand how effective they are at handling exceptional conditions. The Ballista testing system was used to characterize the handling of exceptional input parameter values for up to 233 POSIX functions and system calls on each of 15 widely used operating system (OS) implementations. This identified ways to crash systems with a single call, ways to cause task hangs within OS code, ways to cause abnormal task termination within OS and library code, failures to implement defined POSIX functionality, and failures to report unsuccessful operations. Overall, only 55 percent to 76 percent of the exceptional tests performed generated error codes, depending on the operating system being tested. Approximately 6 percent to 19 percent of tests failed to generate any indication of error despite exceptional inputs. Approximately 1 percent to 3 percent of tests revealed failures to implement defined POSIX functionality for unusual, but specified, situations. Between 18 percent and 33 percent of exceptional tests caused the abnormal termination of an OS system call or library function, and five systems were completely crashed by individual system calls with exceptional parameter values. The most prevalent sources of these robustness failures were illegal pointer values, numeric overflows, and end-of-file overruns.},
	number = {9},
	journal = {IEEE Transactions on Software Engineering},
	author = {Koopman, P. and DeVale, J.},
	month = sep,
	year = {2000},
	note = {Conference Name: IEEE Transactions on Software Engineering},
	keywords = {Application software, Computer crashes, Libraries, Operating systems, Performance evaluation, Programming profession, Robustness, System testing, Telecommunication computing, Vehicle crash testing},
	pages = {837--848},
	file = {IEEE Xplore Abstract Record:/Users/jazer/Zotero/storage/33GXEHYJ/877845.html:text/html;IEEE Xplore Full Text PDF:/Users/jazer/Zotero/storage/JC83ZKFZ/Koopman and DeVale - 2000 - The exception handling effectiveness of POSIX oper.pdf:application/pdf},
}

@article{zolkifli_version_2018,
	series = {The 3rd {International} {Conference} on {Computer} {Science} and {Computational} {Intelligence} ({ICCSCI} 2018) : {Empowering} {Smart} {Technology} in {Digital} {Era} for a {Better} {Life}},
	title = {Version {Control} {System}: {A} {Review}},
	volume = {135},
	issn = {1877-0509},
	shorttitle = {Version {Control} {System}},
	url = {https://www.sciencedirect.com/science/article/pii/S1877050918314819},
	doi = {10.1016/j.procs.2018.08.191},
	abstract = {Version Control Systems (VCS) have been used by many software developers during project developments as it helps them to manage the source codes and enables them to keep every version of the project they have worked on. It is the way towards managing, organizing, and coordinating the development of objects. In Software Engineering, software developers need to collaborate with each other to develop a better project. Thus, VCS is very useful because it also supports a collaborative framework that makes it easy for software developers to work together effectively. Without VCS, collaboration is very challenging. This paper discusses the background and the related works about VCS that have been studied by researchers. The purpose of this paper is to convey the knowledge and ideas that have been established on VCS.},
	language = {en},
	urldate = {2023-05-02},
	journal = {Procedia Computer Science},
	author = {Zolkifli, Nazatul Nurlisa and Ngah, Amir and Deraman, Aziz},
	month = jan,
	year = {2018},
	keywords = {Centralized Version Control Systems, Collaborative Development, Distributed Version Control Systems, Software Development, Version Control Systems},
	pages = {408--415},
	file = {ScienceDirect Full Text PDF:/Users/jazer/Zotero/storage/SE2JQAI7/Zolkifli et al. - 2018 - Version Control System A Review.pdf:application/pdf;ScienceDirect Snapshot:/Users/jazer/Zotero/storage/FUFUHKN2/S1877050918314819.html:text/html},
}

@book{tsitoara_beginning_2020,
	address = {Berkeley, CA},
	title = {Beginning {Git} and {GitHub}: {A} {Comprehensive} {Guide} to {Version} {Control}, {Project} {Management}, and {Teamwork} for the {New} {Developer}},
	isbn = {978-1-4842-5312-0 978-1-4842-5313-7},
	shorttitle = {Beginning {Git} and {GitHub}},
	url = {http://link.springer.com/10.1007/978-1-4842-5313-7},
	language = {en},
	urldate = {2023-05-02},
	publisher = {Apress},
	author = {Tsitoara, Mariot},
	year = {2020},
	doi = {10.1007/978-1-4842-5313-7},
	keywords = {code reviews, distributed team, Git, GitHub, open source, project management, social coding, software development, software distribution process, teamwork, version control},
	file = {Full Text:/Users/jazer/Zotero/storage/SHD46XN8/Tsitoara - 2020 - Beginning Git and GitHub A Comprehensive Guide to.pdf:application/pdf},
}

@book{pilato_version_2008,
	address = {Beijing Cambridge Farnham Köln},
	edition = {2. ed},
	title = {Version control with subversion: the standard in open source version control},
	isbn = {978-0-596-51033-6},
	shorttitle = {Version control with subversion},
	language = {eng},
	publisher = {O'Reilly},
	author = {Pilato, C. Michael and Collins-Sussman, Ben and Fitzpatrick, Brian W.},
	year = {2008},
	annote = {1. Aufl. verf. von: Ben Collins-Sussman; Brian W. Fitzpatrick; C. Michael Pilato},
}

@article{merkel_docker_2014,
	title = {Docker: lightweight {Linux} containers for consistent development and deployment},
	shorttitle = {Docker},
	url = {https://www.semanticscholar.org/paper/Docker%3A-lightweight-Linux-containers-for-consistent-Merkel/875d90d4f66b07f90687b27ab304e04a3f666fc2},
	abstract = {Docker promises the ability to package applications and their dependencies into lightweight containers that move easily between different distros, start up quickly and are isolated from each other.},
	urldate = {2023-05-02},
	journal = {Linux Journal},
	author = {Merkel, Dirk},
	month = mar,
	year = {2014},
	annote = {[TLDR] Docker promises the ability to package applications and their dependencies into lightweight containers that move easily between different distros, start up quickly and are isolated from each other.},
	file = {Full Text PDF:/Users/jazer/Zotero/storage/LKYBD9TF/Merkel - 2014 - Docker lightweight Linux containers for consisten.pdf:application/pdf},
}

@article{lawal_comparative_2021,
	title = {A {COMPARATIVE} {ANALYSIS} {OF} {AGILE} {AND} {WATERFALL} {SOFTWARE} {DEVELOPMENT} {METHODOLOGIES}},
	volume = {11},
	issn = {978-35823-4-8},
	url = {https://bakolorijournal.com/article/v11-2/5/},
	doi = {10.xxxx/abcd},
	number = {2},
	journal = {BAKOLORI JOURNAL OF GENERAL STUDIES},
	author = {Lawal, Ahmed and Chukwu Ogbu, Richard},
	month = may,
	year = {2021},
	pages = {1--2},
	file = {A COMPARATIVE ANALYSIS OF AGILE AND WATERFALL SOFTWARE DEVELOPMENT METHODOLOGIES:/Users/jazer/Zotero/storage/NI7YKKQN/5.html:text/html},
}

@article{heriyanti_design_2020,
	title = {Design of logistics information system in the finished product warehouse with the waterfall method: review literature},
	volume = {801},
	issn = {1757-899X},
	shorttitle = {Design of logistics information system in the finished product warehouse with the waterfall method},
	url = {https://dx.doi.org/10.1088/1757-899X/801/1/012100},
	doi = {10.1088/1757-899X/801/1/012100},
	abstract = {The process of sending and loading finished goods is very important. According to some experts, transportation activities spend 44\% of the total cost. Even in Indonesia transportation costs can reach more than 60\%. In practice, one way of saving on transportation costs can be done by minimizing the waiting time for loading finished products in the warehouse. The slow delivery of information from the logistics department to the warehouse can cause high load times for finished products. This can lead to delays in product delivery to consumers. The method used in this paper is the Waterfall method. The Waterfall method provides a software flow approach in sequence or sequentially starting from analysis, design, implementation, verification, and maintenance phase.},
	language = {en},
	number = {1},
	urldate = {2023-05-02},
	journal = {IOP Conference Series: Materials Science and Engineering},
	author = {Heriyanti, Friska and Ishak, Aulia},
	month = may,
	year = {2020},
	note = {Publisher: IOP Publishing},
	pages = {012100},
	file = {IOP Full Text PDF:/Users/jazer/Zotero/storage/9HHWHNMN/Heriyanti and Ishak - 2020 - Design of logistics information system in the fini.pdf:application/pdf},
}

@inproceedings{mpcs_waterfall_2012,
	title = {Waterfall vs. {Agile} {Methodology}},
	url = {https://www.semanticscholar.org/paper/Waterfall-vs.-Agile-Methodology-Mpcs/73c9d2d3f5fc165db508b6eab936b85afc311961},
	abstract = {Semantic Scholar extracted view of "Waterfall vs. Agile Methodology" by Mike McCormick Mpcs},
	urldate = {2023-05-02},
	author = {Mpcs, Mike McCormick},
	year = {2012},
	file = {Full Text PDF:/Users/jazer/Zotero/storage/X4KSACNN/Mpcs - 2012 - Waterfall vs. Agile Methodology.pdf:application/pdf},
}

@inproceedings{sremath_tirumala_hybrid_2016,
	title = {A {Hybrid} {Agile} model using {SCRUM} and {Feature} {Driven} {Development}},
	volume = {156},
	doi = {10.5120/ijca2016912443},
	abstract = {Migration is considered as crucial task especially in case of distributed projects. Banking domain, which involves sensitive business operations, is one such example which involves large volumes of data and transactions. Banking process is as old as history of human transactions, technological migration is necessary to cope up with the latest advancements to provide better service to the customers. For such a task, a single project management method deployment may not be strategically efficient, especially in terms of maintaining schedule and quality. For instance SCRUM and Feature Driven Development (FDD) are two well-known and popular project management methods with their own advantages and shortcomings. SCRUM, being tight with schedules, often quality may be compromised whereas FDD being quality rich, could overrun project time-line. In this paper for the first time, SCR-FDD, a purposeful amalgamation of SCRUM and FDD methodologies is proposed. The proposed SCR-FDD is evaluated against SCRUM and FDD within a real time project and the results show that proposed SCR-FDD is ten percent more efficient in terms of quality and customer satisfaction compared to its nearest counterpart, SCRUM.},
	author = {Sremath Tirumala, Sreenivas and Ali, Shahid and Babu G, Anjan},
	month = dec,
	year = {2016},
	pages = {1--5},
	file = {Full Text PDF:/Users/jazer/Zotero/storage/55AF93MH/Sremath Tirumala et al. - 2016 - A Hybrid Agile model using SCRUM and Feature Drive.pdf:application/pdf},
}

@book{shore_art_2022,
	address = {Sebastopol, CA},
	edition = {Second edition},
	series = {Theory in practice},
	title = {The art of agile development},
	isbn = {978-1-4920-8069-5},
	abstract = {"Most companies developing software employ something they call "Agile." But there's widespread misunderstanding of what Agile is and how to use it. If you want to improve your software development team's agility, this comprehensive guidebook's clear, concrete, and detailed guidance explains what to do and why, and when to make trade-offs. In this thorough update of the classic Agile how-to guide, James Shore provides no-nonsense advice on Agile adoption, planning, development, delivery, and management taken from over two decades of Agile experience. He brings the latest ideas from Extreme Programming, Scrum, Lean, DevOps, and more into a cohesive whole. Learn how to successfully bring Agile development to your team and organization--or discover why Agile might not be for you."--Amazon.com},
	publisher = {O'Reilly Media, Inc},
	author = {Shore, James and Larsen, Diana and Klitgaard, Gitte and Warden, Shane},
	year = {2022},
	note = {OCLC: on1272885748},
	keywords = {Agile software development, Computer software, Development, Méthodes agiles (Développement de logiciels)},
	annote = {Previous edition: 2007},
}

@inproceedings{biorn-hansen_progressive_2017,
	title = {Progressive {Web} {Apps}: {The} {Possible} {Web}-native {Unifier} for {Mobile} {Development}},
	shorttitle = {Progressive {Web} {Apps}},
	doi = {10.5220/0006353703440351},
	author = {Biørn-Hansen, Andreas and Majchrzak, Tim A. and Grønli, Tor-Morten},
	month = jan,
	year = {2017},
	pages = {344--351},
	file = {Full Text PDF:/Users/jazer/Zotero/storage/J2YXMVRA/Biørn-Hansen et al. - 2017 - Progressive Web Apps The Possible Web-native Unif.pdf:application/pdf},
}

@inproceedings{fernandez_secure_2008,
	title = {The {Secure} {Three}-{Tier} {Architecture} {Pattern}},
	doi = {10.1109/CISIS.2008.51},
	abstract = {The three-tier architecture pattern and its variants have been around for a while and there are several discussions of their properties as well as several patterns. None of these discussions considers security. However, several real systems implement this approach including security. We revisit this pattern to explicitly separate and analyze its security aspects.},
	booktitle = {2008 {International} {Conference} on {Complex}, {Intelligent} and {Software} {Intensive} {Systems}},
	author = {Fernandez, Eduardo B. and Fonoage, Mihai and VanHilst, Michael and Marta, Mirela},
	month = mar,
	year = {2008},
	keywords = {Authorization, Business, Computer architecture, Conferences, distributed systems, Middleware, patterns, security, Security, Software},
	pages = {555--560},
	file = {IEEE Xplore Abstract Record:/Users/jazer/Zotero/storage/FFKE5UEV/4606734.html:text/html;IEEE Xplore Full Text PDF:/Users/jazer/Zotero/storage/2BBIMVQ5/Fernandez et al. - 2008 - The Secure Three-Tier Architecture Pattern.pdf:application/pdf},
}

@book{date_database_2019,
	address = {New York},
	edition = {Second edition},
	series = {For professionals by professionals},
	title = {Database design and relational theory: normal forms and all that jazz},
	isbn = {978-1-4842-5539-1},
	shorttitle = {Database design and relational theory},
	language = {eng},
	publisher = {Apress},
	author = {Date, Chris J.},
	year = {2019},
}

@inproceedings{isha_automated_2018,
	title = {Automated {API} {Testing}},
	doi = {10.1109/ICICT43934.2018.9034254},
	abstract = {Application programming interface, or API, is a piece of code that enables two software components to interact. Recent software applications are becoming distributed across various servers that interact with back-end utilities through standardised interfaces. Software applications provide a part of their data and business logic through APIs with the end goal to produce extra revenue called API economy. The number of APIs are expanding exponentially with every year. Thus, directing automated tests on the APIs has turned into a pivotal step in software development process since malfunctioning or ineffective APIs can result in lower acquisition of product and ultimately loss in revenue. API testing is crucial to ensure functionality, reliability, security and delivery of business logic. Major challenges faced during automated API testing include sequencing API calls, comparing unpredictable response, handling planned failed test cases, parallel API execution and handling parameter reliance. This paper presents proposed automated API testing tool and literature survey of automated API testing.},
	booktitle = {2018 3rd {International} {Conference} on {Inventive} {Computation} {Technologies} ({ICICT})},
	author = {{Isha} and Sharma, Abhinav and Revathi, M.},
	month = nov,
	year = {2018},
	keywords = {API, automated API testing, automated testing, Business, JSON, Manuals, REST API, Security, Sequential analysis, Software, Testing, Tools, Web API},
	pages = {788--791},
	file = {IEEE Xplore Abstract Record:/Users/jazer/Zotero/storage/HW9SKB8N/9034254.html:text/html;IEEE Xplore Full Text PDF:/Users/jazer/Zotero/storage/NACWIWAD/Isha et al. - 2018 - Automated API Testing.pdf:application/pdf},
}

@book{westerveld_api_2021,
	title = {{API} {Testing} and {Development} with {Postman}: {A} practical guide to creating, testing, and managing {APIs} for automated software testing},
	isbn = {978-1-80056-573-9},
	shorttitle = {{API} {Testing} and {Development} with {Postman}},
	abstract = {Explore the world of APIs and learn how to integrate them with production-ready applications using Postman and the Newman CLIKey FeaturesLearn the tenets of effective API testing and API designGain an in-depth understanding of the various features Postman has to offerKnow when and how to use Postman for creating high-quality APIs for software and web appsBook DescriptionPostman enables the exploration and testing of web APIs, helping testers and developers figure out how an API works. With Postman, you can create effective test automation for any APIs. If you want to put your knowledge of APIs to work quickly, this practical guide to using Postman will help you get started. The book provides a hands-on approach to learning the implementation and associated methodologies that will have you up and running with Postman in no time. Complete with step-by-step explanations of essential concepts, practical examples, and self-assessment questions, this book begins by taking you through the principles of effective API testing. A combination of theory coupled with real-world examples will help you learn how to use Postman to create well-designed, documented, and tested APIs. You\&\#39;ll then be able to try some hands-on projects that will teach you how to add test automation to an already existing API with Postman, and guide you in using Postman to create a well-designed API from scratch. By the end of this book, you\&\#39;ll be able to use Postman to set up and run API tests for any API that you are working with. What you will learnFind out what is involved in effective API testingUse data-driven testing in Postman to create scalable API testsUnderstand what a well-designed API looks likeBecome well-versed with API terminology, including the different types of APIsGet to grips with performing functional and non-functional testing of an APIDiscover how to use industry standards such as OpenAPI and mocking in PostmanWho this book is forThe book is for software testing professionals and software developers looking to improve product and API quality through API test automation. You will find this book useful if understand APIs and want to build your skills for creating, testing, and documenting APIs. The book assumes beginner-level knowledge of JavaScript and API development.},
	language = {en},
	publisher = {Packt Publishing Ltd},
	author = {Westerveld, Dave},
	month = may,
	year = {2021},
	note = {Google-Books-ID: 93QqEAAAQBAJ},
	keywords = {Computers / Internet / Web Services \& APIs, Computers / Software Development \& Engineering / Quality Assurance \& Testing},
}

@inproceedings{gauravaram_security_2012,
	title = {Security {Analysis} of salt{\textbar}{\textbar}password {Hashes}},
	doi = {10.1109/ACSAT.2012.49},
	abstract = {Protection of passwords used to authenticate computer systems and networks is one of the most important application of cryptographic hash functions. Due to the application of precomputed memory look up attacks such as birthday and dictionary attacks on the hash values of passwords to find passwords, it is usually recommended to apply hash function to the combination of both the salt and password, denoted salt{\textbar}{\textbar}password, to prevent these attacks. In this paper, we present the first security analysis of salt{\textbar}{\textbar}password hashing application. We show that when hash functions based on the compression functions with easily found fixed points are used to compute the salt{\textbar}{\textbar}password hashes, these hashes are susceptible to precomputed offline birthday attacks. For example, this attack is applicable to the salt{\textbar}{\textbar}password hashes computed using the standard hash functions such as MD5, SHA-1, SHA-256 and SHA-512 that are based on the popular Davies-Meyer compression function. This attack exposes a subtle property of this application that although the provision of salt prevents an attacker from finding passwords, salts prefixed to the passwords do not prevent an attacker from doing a precomputed birthday attack to forge an unknown password. In this forgery attack, we demonstrate the possibility of building multiple passwords for an unknown password for the same hash value and salt. Interestingly, password{\textbar}{\textbar}salt (i.e. salts suffixed to the passwords) hashes computed using Davies-Meyer hash functions are not susceptible to this attack, showing the first security gap between the prefix-salt and suffix-salt methods of hashing passwords.},
	booktitle = {2012 {International} {Conference} on {Advanced} {Computer} {Science} {Applications} and {Technologies} ({ACSAT})},
	author = {Gauravaram, Praveen},
	month = nov,
	year = {2012},
	keywords = {Compression functions, Computer systems security, Cryptography, Hash functions, Password, Salt},
	pages = {25--30},
	file = {IEEE Xplore Abstract Record:/Users/jazer/Zotero/storage/5FVMIHID/6516321.html:text/html;IEEE Xplore Full Text PDF:/Users/jazer/Zotero/storage/K8K75XCE/Gauravaram - 2012 - Security Analysis of saltpassword Hashes.pdf:application/pdf},
}

@misc{page_how_2023,
	title = {How to {Secure} {PostgreSQL}: {Security} {Hardening} {Best} {Practices} \& {Tips}},
	shorttitle = {How to {Secure} {PostgreSQL}},
	url = {https://www.enterprisedb.com/blog/how-to-secure-postgresql-security-hardening-best-practices-checklist-tips-encryption-authentication-vulnerabilities},
	abstract = {Learn how to secure your PostgreSQL database. Guide for PostgreSQL security hardening best practices. Get tips about securing PostgreSQL encryption, authentication, access, roles, and many more.},
	language = {en},
	urldate = {2023-05-02},
	journal = {EDB},
	author = {Page, Dave},
	month = mar,
	year = {2023},
	file = {Security-best-practices-2020.pdf:/Users/jazer/Zotero/storage/3MGLMXBY/Security-best-practices-2020.pdf:application/pdf;Snapshot:/Users/jazer/Zotero/storage/PT9EMC33/how-to-secure-postgresql-security-hardening-best-practices-checklist-tips-encryption-authentica.html:text/html},
}
